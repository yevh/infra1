{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "publisherEmail": {
      "type": "string",
      "defaultValue" : "contoso@contoso.com",
      "minLength": 1,
      "metadata": {
        "description": "The email address of the owner of the service"
      }
    },
    "publisherName": {
      "type": "string",
      "defaultValue" : "Contoso",
      "minLength": 1,
      "metadata": {
        "description": "The name of the owner of the service"
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Consumption",
        "Developer",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "The pricing tier of this API Management service"
      }
    },
    "skuCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The instance size of this API Management service."
      }
    },
    "Secrets": {
      "type": "array",
      "metadata": {
        "description": "An array of json objects like this : {'name':name, 'value':value}"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "[concat('kv-', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the KeyVault to provision"
      }
    },
    "gatewayCustomHostname": {
      "type": "string",
      "metadata": {
        "description": "Name of the gateway custom hostname"
      }
    },
    "NetworkWatcherName": {
      "type": "string",
      "defaultValue": "[concat('NetworkWatcher_', parameters('location'))]",
      "metadata": {
        "description": "Name of the Network Watcher attached to your subscription. Format: NetworkWatcher_<region_name>"
      }
    },
    "FlowLogName": {
      "type": "string",
      "defaultValue": "FlowLog1",
      "metadata": {
        "description": "Chosen name of your Flow log resource"
      }
    },
    "existingNSG": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of the target NSG"
      }
    },
    "RetentionDays": {
      "type": "int",
      "defaultValue": 10,
      "minValue": 0,
      "maxValue": 365,
      "metadata": {
        "description": "Retention period in days. Default is zero which stands for permanent retention. Can be any Integer from 0 to 365"
      }
    },
    "FlowLogsversion": {
      "type": "string",
      "defaultValue": "2",
      "allowedValues": [
        "1",
        "2"
      ],
      "metadata": {
        "description": "FlowLogs Version. Correct values are 1 or 2 (default)"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "storageAccountResourceId": {
      "type": "string",
      "defaultValue": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
    }
  },
  "variables": {
    "apiManagementServiceName": "[concat('apim-', uniqueString(resourceGroup().id))]",
    "identityName": "[concat('id-', uniqueString(resourceGroup().id))]",
    "identityID": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkWatchers/flowLogs",
      "apiVersion": "2020-06-01",
      "name": "[concat(parameters('NetworkWatcherName'), '/', parameters('FlowLogName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "targetResourceId": "[parameters('existingNSG')]",
        "storageId": "[parameters('storageAccountResourceId')]",
        "enabled": false,
        "retentionPolicy": {
          "days": "[parameters('RetentionDays')]",
          "enabled": true
        },
        "format": {
          "type": "JSON",
          "version": "[parameters('FlowLogsversion')]"
        }
      }
    }
 ]
}
