name: tfsec
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  tfsec:
    name: tfsec
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Run tfsec
        id: tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        continue-on-error: true

      - name: Generate summary
        if: success() || failure()
        shell: bash
        run: |
          echo "# 🔒 tfsec Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "## Summary" >> $GITHUB_STEP_SUMMARY
          
          # Parse JSON and generate counts
          echo '${{ steps.tfsec.outputs.results }}' > results.json
          
          CRITICAL=$(jq -r '.results[] | select(.severity=="CRITICAL") | .rule_id' results.json | wc -l)
          HIGH=$(jq -r '.results[] | select(.severity=="HIGH") | .rule_id' results.json | wc -l)
          MEDIUM=$(jq -r '.results[] | select(.severity=="MEDIUM") | .rule_id' results.json | wc -l)
          LOW=$(jq -r '.results[] | select(.severity=="LOW") | .rule_id' results.json | wc -l)
          
          echo "Found issues:" >> $GITHUB_STEP_SUMMARY
          echo "🚨 Critical: $CRITICAL" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ High: $HIGH" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ Medium: $MEDIUM" >> $GITHUB_STEP_SUMMARY
          echo "ℹ️ Low: $LOW" >> $GITHUB_STEP_SUMMARY
          
          echo -e "\n## Details" >> $GITHUB_STEP_SUMMARY
          jq -r '.results[] | "### [\(.severity)] \(.rule_id)\n**Location**: \(.location.filename):\(.location.start_line)\n**Description**: \(.description)\n"' results.json >> $GITHUB_STEP_SUMMARY

      - name: Check for critical issues
        if: success() || failure()
        run: |
          CRITICAL=$(jq -r '.results[] | select(.severity=="CRITICAL") | .rule_id' results.json | wc -l)
          if [ "$CRITICAL" -gt 0 ]; then
            echo "🚨 Found $CRITICAL critical security issues!"
            exit 1
          fi
